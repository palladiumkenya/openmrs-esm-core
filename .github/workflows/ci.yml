name: KenyaEMR 3.x CI

on:
  workflow_dispatch: # temporary, for debugging
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:
      - created

env:
  TURBO_API: 'http://127.0.0.1:9080'
  TURBO_TOKEN: ${{ secrets.TURBO_SERVER_TOKEN }}
  TURBO_TEAM: ${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: read

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "16.15"

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Setup local cache server for Turborepo
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: Run lint, tests and typecheck code
        run: yarn run verify

      - name: Run build
        run: yarn turbo run build --color --concurrency=5
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: |
            packages/**/dist
  deploy_esm-devtools-app:
    runs-on: ubuntu-latest

    env:
      DIR_NAME: "apps/esm-devtools-app"
      ESM_NAME: "@openmrs/esm-devtools-app"
      JS_NAME: "openmrs-esm-devtools-app.js"

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Compute Timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Prepare Directory
        shell: bash
        run: |
          mkdir -p dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}
          mv packages/apps/${{ env.DIR_NAME }}/dist/*.* dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/
      # deploying to Data
      - name: deploy-to-server
        uses: Pendect/action-rsyncer@v2.0.0
        env:
          DEPLOY_KEY: ${{secrets.KEY}}
        with:
          flags: "-avzr --update"
          options: ""
          ssh_options: "-p ${{secrets.PORT}}"
          src: "dist"
          dest: "${{secrets.USER}}@${{secrets.HOST}}:/var/www/openmrs"

      - name: Update Importmap
        uses: fjogeleit/http-request-action@master
        with:
          url: http://${{ secrets.DEPLOYER_HOST }}/services?env=prod
          method: "PATCH"
          username: ${{ secrets.DEPLOYER_USERNAME }}
          password: ${{ secrets.DEPLOYER_PASSWORD }}
          data: '{ "service":"${{ env.ESM_NAME }}","url":"https://deployer.kenyahmis.org/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/${{ env.JS_NAME }}" }'
          customHeaders: '{ "Accept": "application/json", "Content-Type": "application/json" }'
  deploy_esm-implementer-tools-app:
    runs-on: ubuntu-latest

    env:
      DIR_NAME: "esm-implementer-tools-app"
      ESM_NAME: "@openmrs/esm-implementer-tools-app"
      JS_NAME: "openmrs-esm-implementer-tools-app.js"

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Compute Timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Prepare Directory
        shell: bash
        run: |
          mkdir -p dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}
          mv packages/apps/${{ env.DIR_NAME }}/dist/*.* dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/
      # deploying to Data
      - name: deploy-to-server
        uses: Pendect/action-rsyncer@v2.0.0
        env:
          DEPLOY_KEY: ${{secrets.KEY}}
        with:
          flags: "-avzr --update"
          options: ""
          ssh_options: "-p ${{secrets.PORT}}"
          src: "dist"
          dest: "${{secrets.USER}}@${{secrets.HOST}}:/var/www/openmrs"

      - name: Update Importmap
        uses: fjogeleit/http-request-action@master
        with:
          url: http://${{ secrets.DEPLOYER_HOST }}/services?env=prod
          method: "PATCH"
          username: ${{ secrets.DEPLOYER_USERNAME }}
          password: ${{ secrets.DEPLOYER_PASSWORD }}
          data: '{ "service":"${{ env.ESM_NAME }}","url":"https://deployer.kenyahmis.org/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/${{ env.JS_NAME }}" }'
          customHeaders: '{ "Accept": "application/json", "Content-Type": "application/json" }'
  deploy_esm-login-app:
    runs-on: ubuntu-latest

    env:
      DIR_NAME: "esm-login-app"
      ESM_NAME: "@openmrs/esm-login-app"
      JS_NAME: "openmrs-esm-login-app.js"

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Compute Timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Prepare Directory
        shell: bash
        run: |
          mkdir -p dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}
          mv packages/apps/${{ env.DIR_NAME }}/dist/*.* dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/
      # deploying to Data
      - name: deploy-to-server
        uses: Pendect/action-rsyncer@v2.0.0
        env:
          DEPLOY_KEY: ${{secrets.KEY}}
        with:
          flags: "-avzr --update"
          options: ""
          ssh_options: "-p ${{secrets.PORT}}"
          src: "dist"
          dest: "${{secrets.USER}}@${{secrets.HOST}}:/var/www/openmrs"

      - name: Update Importmap
        uses: fjogeleit/http-request-action@master
        with:
          url: http://${{ secrets.DEPLOYER_HOST }}/services?env=prod
          method: "PATCH"
          username: ${{ secrets.DEPLOYER_USERNAME }}
          password: ${{ secrets.DEPLOYER_PASSWORD }}
          data: '{ "service":"${{ env.ESM_NAME }}","url":"https://deployer.kenyahmis.org/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/${{ env.JS_NAME }}" }'
          customHeaders: '{ "Accept": "application/json", "Content-Type": "application/json" }'


  deploy_esm-offline-tools-app:
    runs-on: ubuntu-latest

    env:
      DIR_NAME: "esm-offline-tools-app"
      ESM_NAME: "@openmrs/esm-offline-tools-app"
      JS_NAME: "openmrs-esm-offline-tools-app.js"

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Compute Timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Prepare Directory
        shell: bash
        run: |
          mkdir -p dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}
          mv packages/apps/${{ env.DIR_NAME }}/dist/*.* dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/
      # deploying to Data
      - name: deploy-to-server
        uses: Pendect/action-rsyncer@v2.0.0
        env:
          DEPLOY_KEY: ${{secrets.KEY}}
        with:
          flags: "-avzr --update"
          options: ""
          ssh_options: "-p ${{secrets.PORT}}"
          src: "dist"
          dest: "${{secrets.USER}}@${{secrets.HOST}}:/var/www/openmrs"

      - name: Update Importmap
        uses: fjogeleit/http-request-action@master
        with:
          url: http://${{ secrets.DEPLOYER_HOST }}/services?env=prod
          method: "PATCH"
          username: ${{ secrets.DEPLOYER_USERNAME }}
          password: ${{ secrets.DEPLOYER_PASSWORD }}
          data: '{ "service":"${{ env.ESM_NAME }}","url":"https://deployer.kenyahmis.org/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/${{ env.JS_NAME }}" }'
          customHeaders: '{ "Accept": "application/json", "Content-Type": "application/json" }'


  deploy_esm-primary-navigation-app:
    runs-on: ubuntu-latest

    env:
      DIR_NAME: "esm-primary-navigation-app"
      ESM_NAME: "@openmrs/esm-primary-navigation-app"
      JS_NAME: "openmrs-esm-primary-navigation-app.js"

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Compute Timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Prepare Directory
        shell: bash
        run: |
          mkdir -p dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}
          mv packages/apps/${{ env.DIR_NAME }}/dist/*.* dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/
      # deploying to Data
      - name: deploy-to-server
        uses: Pendect/action-rsyncer@v2.0.0
        env:
          DEPLOY_KEY: ${{secrets.KEY}}
        with:
          flags: "-avzr --update"
          options: ""
          ssh_options: "-p ${{secrets.PORT}}"
          src: "dist"
          dest: "${{secrets.USER}}@${{secrets.HOST}}:/var/www/openmrs"

      - name: Update Importmap
        uses: fjogeleit/http-request-action@master
        with:
          url: http://${{ secrets.DEPLOYER_HOST }}/services?env=prod
          method: "PATCH"
          username: ${{ secrets.DEPLOYER_USERNAME }}
          password: ${{ secrets.DEPLOYER_PASSWORD }}
          data: '{ "service":"${{ env.ESM_NAME }}","url":"https://deployer.kenyahmis.org/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/${{ env.JS_NAME }}" }'
          customHeaders: '{ "Accept": "application/json", "Content-Type": "application/json" }'
  deploy_esm-app-shell:
    runs-on: ubuntu-latest

    env:
      DIR_NAME: "esm-app-shell"
      ESM_NAME: "@openmrs/esm-app-shell"
      JS_NAME: "openmrs-esm-app-shell"

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Compute Timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Prepare Directory
        shell: bash
        run: |
          mkdir -p dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}
          mkdir -p dist/${{ env.ESM_NAME }}/latest
          cp -r packages/shell/esm-app-shell/dist/ dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/
          cp -r packages/shell/esm-app-shell/dist/ dist/${{ env.ESM_NAME }}/latest/
      # deploying to Data
      - name: deploy-to-server
        uses: Pendect/action-rsyncer@v2.0.0
        env:
          DEPLOY_KEY: ${{secrets.KEY}}
        with:
          flags: "-avzr --update"
          options: ""
          ssh_options: "-p ${{secrets.PORT}}"
          src: "dist"
          dest: "${{secrets.USER}}@${{secrets.HOST}}:/var/www/openmrs"

      - name: Update Importmap
        uses: fjogeleit/http-request-action@master
        with:
          url: http://${{ secrets.DEPLOYER_HOST }}/services?env=prod
          method: "PATCH"
          username: ${{ secrets.DEPLOYER_USERNAME }}
          password: ${{ secrets.DEPLOYER_PASSWORD }}
          data: '{ "service":"${{ env.ESM_NAME }}","url":"https://deployer.kenyahmis.org/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/${{ env.JS_NAME }}" }'
          customHeaders: '{ "Accept": "application/json", "Content-Type": "application/json" }'



